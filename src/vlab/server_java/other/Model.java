package vlab.server_java.other;

/**
 * Created by dima on 02.05.2015.
 */

/**
 * Модель, имеет вариант и состояние
 * В состоянии первыми должны идти параметры, изменяемые пользователем из установки
 *
 * Класс, реализующий данный интерфейс, должен иметь два конструра:
 * 1) без параметров, при создании через данный конструктор генерируется новый вариант
 * 2) с параметрами variant (вариант задания) и modelState (состояние модели),
 * при создании через данный конструктор подхватывается имеющийся вариант, также грузится состояние
 */
public interface Model {
    /**
     * После запуска конструктора позволяет "проиграть" модель с пользовательским состоянием
     */
    public void processModel();

    /**
     * Возвращает сериализованый вариант после генерации нового варианта конструктором без параметров
     * @return
     */
    public String getVariant();

    /**
     * Возвращает состояние модели после "проигрывания"
     * @return Состояние модели, включая состояния, изменяемые пользователем, и состояния, промоделированные в processModel()
     */
    public String getModelState();
    /**
     * Проверяет состояние модели на правильность в зависимости от варианта
     */
    public void checkUserAnswer();

    /**
     * Возвращает оценку, полученную пользователем после вызова checkUserAnswer()
     * @return Баллы [0;1]
     */
    public float getScore();

    /**
     * Возвращает текст, сообщаемый пользователю после вызова checkUserAnswer()
     * @return Пояснения для пользователя
     */
    public String getTextOutput();
}
